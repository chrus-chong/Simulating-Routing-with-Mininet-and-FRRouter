! ################################  STEP 2 #########################################

router bgp 400

	! Set router id to be used for tie-breaking
	bgp router-id 100.100.4.1
	
	! allow exporting routes without setting explicit export policies
	no bgp ebgp-requires-policy
	
	! set up BGP peers
	! IP-address is recipient interface
	! ASN is recipient AS number
	! 172.17.3.0 is r110-eth3 interface with r110
	neighbor 172.17.3.0 remote-as 100
	
	! 172.17.4.0 is r130-eth3 interface with r130
	neighbor 172.17.4.0 remote-as 100
	
	! ######################  STEP 4 ###############################
	! We want to set community for the outgoing routes from r410 to r110,r130. Hence use the "out" keyword.
	! Set community using interface r110-eth3 and r130-eth3
	neighbor 172.17.3.0 route-map setCommunity410a out
	neighbor 172.17.4.0 route-map setCommunity410b out
	
	! ##############################################################
	
	! allow advertisement of IPv4 unicast routes
	! connections within AS, IP refers to interface of neighbour node
	! connections between AS, IP refers to interface of this node
	address-family ipv4 unicast
		network 10.4.1.126/25
		network 10.4.1.254/25
		network 172.17.3.1/31
		network 172.17.4.1/31
	exit-address-family

! ################################  STEP 4 #########################################

! Access list for h411
access-list ALa permit 10.4.1.1/25

! Access list for h412
access-list ALb permit 10.4.1.129/25

! Initial mistake: I added match ip address for each and every one of these functions. This is wrong as it will only try to match h411 and h412 and no other destinations. This was what caused my pingall function to fail.

! Idea for setCommunity410a: Note that it is applied on 172.17.3.0 (r110-eth3 interface).
! When r410 receives traffic bound for h411 from r110, we want to send a set of community values such that r110 sets a higher local preference.
! Looking at the task description, we see that this higher value of 300 is set when community values 400:300 are sent. As such, we set 400:300.
! As for the case of sending community values 400:100, we CANNOT match h412. 
! If we do so, then r410 will only send community values for traffic that matches h411 or h412.
! I.E. if we have traffic from r110 to r410 bound for another host, no community values are sent. Dont match any ip address and it will be like and -else statement. 

route-map setCommunity410a permit 10
	match ip address ALa
	set community 400:300

route-map setCommunity410a permit 20
	set community 400:100

! Idea for setCommunity410b: Note that it is applied on 172.17.4.0 (r130-eth3 interface).
! When r410 receives traffic bound for h412 from r130, we want to send a set of community values such that r130 sets a higher local preference.
! Looking at the task description, we see that this higher value of 300 is set when community values 400:300 are sent. As such, we set 400:300.
! As for the case of sending community values 400:100, we CANNOT match h411.
! If we do so, then r410 will only send community values for traffic that matches h412 or h411.
! I.E. if we have traffic from r110 to r410 bound for another host, no community values are sent. Dont match any ip address and it will be like and -else statement. 

route-map setCommunity410b permit 30
	match ip address ALb
	set community 400:300
	
route-map setCommunity410b permit 40
	set community 400:100


