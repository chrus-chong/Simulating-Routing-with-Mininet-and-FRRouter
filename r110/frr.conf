! ################################  STEP 2 #########################################
router rip
	! Routers within the same AS use RIP to communicate
	network 100.100.1.1/32
	neighbor 192.168.1.1
	neighbor 192.168.1.3
	
router bgp 100

	! Set router id to be used for tie-breaking
	bgp router-id 100.100.1.1
	
	! allow exporting routes without setting explicit export policies
	no bgp ebgp-requires-policy
	
	! set up BGP peers
	! IP-address is recipient interface
	! ASN is recipient AS number
	! update-source: use itself as source address when sending updates to neighbor
	! next-hop-self: add itself to routing path
	neighbor 100.100.1.2 remote-as 100
	neighbor 100.100.1.2 update-source 100.100.1.1
	neighbor 100.100.1.2 next-hop-self
	
	neighbor 100.100.1.3 remote-as 100
	neighbor 100.100.1.3 update-source 100.100.1.1
	neighbor 100.100.1.3 next-hop-self

	! 172.17.1.1 is r210-eth1 interface for r210
	neighbor 172.17.1.1 remote-as 200
	
	! 172.17.3.1 is r410-eth2 interface for r410
	neighbor 172.17.3.1 remote-as 400
	
	! ######################  STEP 3 ###############################
	
	! neighbor PEER route-map NAME [in|out]
	! outbound BGP updates to r410 will be set with MED value = 1000
	! Lower MED value from r110 than from r130 means that r110 is the more preferred route. Serves as primary.
	neighbor 172.17.3.1 route-map setMed110 out
	
	! ##############################################################
	
	! ######################  STEP 4 ###############################
	! Initial confusion about whether to use "in" or "out"
	! We want to set local preference on routes received from r410 (I.E. how do you reach h411). Hence we use the "in" keyword.
	neighbor 172.17.3.1 route-map setLocalPreference110 in
	
	! ##############################################################

	! allow advertisement of IPv4 unicast routes
	! connections within AS, IP refers to interface of neighbour node
	! connections between AS, IP refers to interface of this node
	address-family ipv4 unicast
		network 192.168.1.1/31
		network 172.17.1.0/31
		network 172.17.3.0/31
	exit-address-family

! ################################  STEP 3 #########################################

! route-map ROUTE-MAP-NAME (permit|deny) ORDER
! permit: if match, carry out actions specified then permit the route-map
! ORDER: determines the level of importance for this particular statement. Lower number means more important.
! Initially I nested this within the router bgp 100 statement, which was wrong.
! Look at the example from https://docs.frrouting.org/en/latest/bgp.html#bgp-route-selection. Example clearly shows that indentation matter.

route-map setMed110 permit 10
	set metric 1000

! ################################  STEP 4 #########################################

! This is basically like a C++ struct. Compiled into a community structure.
bgp community-list standard CLa permit 400:100
bgp community-list standard CLb permit 400:300

! Two cases to consider. Refer to r410 conf file.
! 1. When traffic headed for h411 reaches r410 via r110, r410 sends community values 400:300 to r110. r110 wants to deliver traffic to h411 so it should set a higher local preference (300) for community values 400:300.
! 2. Else if traffic headed elswhere, r410 sends community values 400:100 to r110. r110 has no obligation specially deliver such traffic so it sets a lower local preference (100).

route-map setLocalPreference110 permit 20
	match community CLa
	set local-preference 100
	
route-map setLocalPreference110 permit 30
	match community CLb
	set local-preference 300	
