! ################################  STEP 2 #########################################

router rip
	! Routers within the same AS use RIP to communicate
	network 100.100.1.3/32
	neighbor 192.168.1.2
	neighbor 192.168.1.0
	
router bgp 100

	! Set router id to be used for tie-breaking
	bgp router-id 100.100.1.3
	
	! allow exporting routes without setting explicit export policies
	no bgp ebgp-requires-policy
	
	! set up BGP peers
	! IP-address is recipient interface
	! ASN is recipient AS number
	! update-source: use itself as source address when sending updates to neighbor
	! next-hop-self: add itself to routing path
	neighbor 100.100.1.2 remote-as 100
	neighbor 100.100.1.2 update-source 100.100.1.3
	neighbor 100.100.1.2 next-hop-self
	
	neighbor 100.100.1.1 remote-as 100
	neighbor 100.100.1.1 update-source 100.100.1.3
	neighbor 100.100.1.1 next-hop-self
	
	! 172.17.2.1 is r310-eth1 interface for r310
	neighbor 172.17.2.1 remote-as 300
	
	! 100.100.4.1 is r410-eth3 interface for r410
	neighbor 172.17.4.1 remote-as 400
	
	! ######################  STEP 3 ###############################
	
	! neighbor PEER route-map NAME [in|out]
	! outbound BGP updates to r410 will be set with MED value = 2000
	! Higher MED value from r130 than from r110 means that r130 is the less preferred route. Serves as backup.
	neighbor 172.17.4.1 route-map setMed130 out
		
	! ##############################################################
	
	! ######################  STEP 4 ###############################
	! Initial confusion about whether to use "in" or "out"
	! We want to set local preference on routes received from r410 (I.E. how do you reach h412). Hence we use the "in" keyword.
	neighbor 172.17.4.1 route-map setLocalPreference130 in
		
	! ##############################################################
	
	! allow advertisement of IPv4 unicast routes
	! connections within AS, IP refers to interface of neighbour node
	! connections between AS, IP refers to interface of this node
	address-family ipv4 unicast
		network 192.168.1.2/31
		network 172.17.2.0/31
		network 172.17.4.0/31
	exit-address-family

! ################################  STEP 3 #########################################

! route-map ROUTE-MAP-NAME (permit|deny) ORDER
! permit: if match, carry out actions specified then permit the route-map
! ORDER: determines the level of importance for this particular statement. Lower number means more important.

route-map setMed130 permit 10
	set metric 2000

! ################################  STEP 4 #########################################

! This is basically like a C++ struct. Compiled into a community structure.
bgp community-list standard CLa permit 400:100
bgp community-list standard CLb permit 400:300

! Two cases to consider. Refer to r410 conf file.
! 1. When traffic headed for h412 reaches r410 via r130, r410 sends community values 400:300 to r130. r130 wants to deliver traffic to h412 so it should set a higher local preference (300) for community values 400:300.
! 2. Else if traffic headed elswhere, r410 sends community values 400:100 to r130. r130 has no obligation specially deliver such traffic so it sets a lower local preference (100).

route-map setLocalPreference130 permit 20
	match community CLa
	set local-preference 100
	
route-map setLocalPreference130 permit 30
	match community CLb
	set local-preference 300
